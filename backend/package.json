{
    "name": "artisan-trace-backend",
    "version": "0.0.1",
    "private": true,
    "license": "UNLICENSED",
    "description": "Use AI for tracing artisan materials",
    "engines": {
      "node": ">= 18"
    },
    "scripts": {
      "get:path-to-app-module": "echo \"dist/src/AppModule.js\"",
      "build": "rimraf dist && tsc -p tsconfig.build.json",
      "build:release": "yarn write-updated-api-spec-file",
      "build:docker-image": "docker build -t $IMAGE_REGISTRY:$CF_BUILD_ID --build-arg NPM_TOKEN=$NPM_TOKEN .",
      "build:watch": "tsc-watch -p tsconfig.build.json --onSuccess ",
      "lint": "eslint \"{src,test,cypress}/**/*.{ts,js}\"",
      "lint:fix": "eslint \"{src,test,cypress}/**/*.{ts,js}\" --fix",
      "test": "DEPLOY_ENV=test jest",
      "test:no-strict": "TS_NODE_PROJECT=tsconfig.test.json DEPLOY_ENV=test jest",
      "test:watch": "DEPLOY_ENV=test jest --watch",
      "test:cov": "DEPLOY_ENV=test jest --coverage",
      "test:cov:text": "DEPLOY_ENV=test jest --coverage --coverageReporters=text",
      "test:integration": "cypress run",
      "test:integration:open": "cypress open",
      "test:integration:local": "yarn test:integration --env name=local",
      "test:delete:reports": "rm -R cypress/reports/junit/*.xml || true",
      "test:merge:reports": "yarn jrm cypress/reports/junit/mergedJunitReport.xml cypress/reports/junit/*.xml",
      "typeorm": "ts-node --require tsconfig-paths/register ./node_modules/typeorm/cli.js",
      "start:dev": "export $(cat .env | xargs) && DEPLOY_ENV=development yarn build:watch \"node dist/src/main.js\"",
      "start:integ": "export $(cat .env | xargs) && DEPLOY_ENV=integration yarn build:watch \"node dist/src/main.js\"",
      "start:local": "export $(cat .env | xargs) && DEPLOY_ENV=local yarn build:watch \"node dist/src/main.js\"",
      "start:prod": "node dist/src/main.js",
      "start:db-migration": "node dist/src/run-migrations.js",
      "start:db-migration:local": "yarn build && export $(cat .env | xargs) && DEPLOY_ENV=local node dist/src/run-migrations.js",
      "migration:generate": "yarn typeorm migration:generate -p -d datasource.config.ts src/database/postgres/migrations/$MIGRATION_NAME",
      "migration:create": "yarn typeorm migration:create src/database/postgres/migrations/$MIGRATION_NAME"
    },
    "dependencies": {
      "@nanogiants/nestjs-swagger-api-exception-decorator": "^1.6.0",
      "@nestjs/common": "^9.4.0",
      "@nestjs/config": "^2.3.1",
      "@nestjs/core": "^9.4.0",
      "@nestjs/platform-express": "^10.3.9",
      "@nestjs/swagger": "^6.3.0",
      "@nestjs/typeorm": "^10.0.2",
      "@slack/bolt": "^4.2.0",
      "@slack/events-api": "^3.0.1",
      "@slack/web-api": "^7.8.0",
      "axios": "^1.7.9",
      "class-transformer": "^0.5.1",
      "class-validator": "^0.14.1",
      "fs-extra": "^11.2.0",
      "joi": "^17.13.3",
      "lodash": "^4.17.21",
      "module-alias": "^2.2.2",
      "openai": "^4.75.0",
      "path": "^0.12.7",
      "pg": "^8.13.1",
      "sqlite3": "^5.1.7",
      "swagger-ui-express": "^4.1.6",
      "typeorm": "^0.3.20",
      "ws": "^8.18.0",
      "zod": "^3.24.1"
    },
    "devDependencies": {
      "@nestjs/testing": "^9.4.0",
      "@types/dotenv": "^8.2.0",
      "@types/express": "4.17.21",
      "@types/jest": "^29.5.12",
      "@types/lodash.snakecase": "^4.1.6",
      "@types/node": "^18.11.18",
      "@types/supertest": "2.0.12",
      "@types/uuid": "^8.3.3",
      "chai-exclude": "~2.1.0",
      "cypress": "^13.14.1",
      "cypress-grep": "2.14.0",
      "jest": "^29.7.0",
      "jest-mock": "^29.7.0",
      "jira-prepare-commit-msg": "^1.6.2",
      "junit-report-merger": "^7.0.0",
      "supertest": "^6.1.6",
      "ts-jest": "^29.2.4",
      "ts-node": "^10.4.0",
      "tsc-watch": "^5.0.3",
      "tsconfig-paths": "^4.0.0",
      "typescript": "^5.7.2"
    },
    "_moduleAliases": {
      "@app": "./dist/src"
    },
    "config": {
      "commitizen": {
        "path": "node_modules/cz-customizable"
      }
    },
    "jira-prepare-commit-msg": {
      "isConventionalCommit": true,
      "messagePattern": "$J $M"
    }
  }
  